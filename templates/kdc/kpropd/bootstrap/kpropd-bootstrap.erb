#!/bin/sh

# This file is managed by Puppet.
# Any local changes will be overwritten.

########################

kdc_keytab_file='<%= @kdc_keytab_file %>'
kdc_database_dir='<%= @kdc_database_dir %>'
kdc_database_dump_name='<%= @kdc_database_dump_name %>'

ssh_options='-oStrictHostKeyChecking=no -oPubkeyAuthentication=yes -oPasswordAuthentication=no'
client_config_temp_file='/tmp/kpropd-bootstrap-krb5.conf'

########################

ensure=$1
realm=$2
slave=$3
master=$4
slave_host_principal=$5
master_host_principal=$6
slave_kiprop_principal=$7
master_kiprop_principal=$8
master_ssh_key=$9

########################

kdc_database_dump_file="${kdc_database_dir}/${realm}/${kdc_database_dump_name}"

[ -n "${master_ssh_key}" ] && ssh_identity="-i ${master_ssh_key}"

########################

if [ "${ensure}" = 'present' ]
then
  # Create the host principal for the slave KDC in the master KDC's Kerberos database.
  ssh $ssh_identity $ssh_options "${master}" "kadmin.local -r ${realm} -q 'add_principal -randkey ${slave_host_principal}'" || exit $?
  ssh $ssh_identity $ssh_options "${master}" "kadmin.local -r ${realm} -q 'add_principal -randkey ${slave_kiprop_principal}'" || exit $?

  # Add the keytab entries for the slave entry host and kiprop principals.
  ssh $ssh_identity $ssh_options "${master}" "kadmin.local -r ${realm} -q 'ktadd -k ${kdc_keytab_file} ${slave_host_principal}'" || exit $?
  ssh $ssh_identity $ssh_options "${master}" "kadmin.local -r ${realm} -q 'ktadd -k ${kdc_keytab_file} ${slave_kiprop_principal}'" || exit $?

  # Copy the keytab from the master to the slave.
  scp $ssh_identity $ssh_options "${master}:${kdc_keytab_file}" "${kdc_keytab_file}" || exit $?

  # Do the initial Kerberos database sync from the master to the slave.
  # After this initial synchronisation, kpropd will use incremental propagation
  # to keep the slave KDC up to date.
  ssh $ssh_identity $ssh_options "${master}" "kdb5_util -r ${realm} dump '${kdc_database_dump_file}'" || exit $?
  ssh $ssh_identity $ssh_options "${master}" "echo -e \"[realms]\n${realm} = {\nkdc = localhost\nkdc = ${slave}\n}\" > '${client_config_temp_file}'" || exit $?
  ssh $ssh_identity $ssh_options "${master}" "KRB5_CONFIG='${client_config_temp_file}' kprop -f '${kdc_database_dump_file}' '${slave}'" || exit $?
  ssh $ssh_identity $ssh_options "${master}" "rm -f '${client_config_temp_file}'" || exit $?
  ssh $ssh_identity $ssh_options "${master}" "rm -f '${kdc_database_dump_file}'" || exit $?
elif [ "${ensure}" = 'absent' ]
then
  # Remove the slave KDC from the master KDC's keytab.
  ssh $ssh_identity $ssh_options "${master}" "kadmin.local -r ${realm} -q 'ktremove ${slave_host_principal} all'" || exit $?
  ssh $ssh_identity $ssh_options "${master}" "kadmin.local -r ${realm} -q 'ktremove ${slave_kiprop_principal} all'" || exit $?

  # Remove the host principal for the slave KDC in the master KDC's Kerberos database.
  ssh $ssh_identity $ssh_options "${master}" "kadmin.local -r ${realm} -q 'delete_principal -force ${slave_host_principal}'" || exit $?
  ssh $ssh_identity $ssh_options "${master}" "kadmin.local -r ${realm} -q 'delete_principal -force ${slave_kiprop_principal}'" || exit $?
fi
